[{"C:\\Users\\srava\\Downloads\\restaurent-details-main\\restaurent-details-main\\src\\index.js":"1","C:\\Users\\srava\\Downloads\\restaurent-details-main\\restaurent-details-main\\src\\App.js":"2","C:\\Users\\srava\\Downloads\\restaurent-details-main\\restaurent-details-main\\src\\store.js":"3","C:\\Users\\srava\\Downloads\\restaurent-details-main\\restaurent-details-main\\src\\reportWebVitals.js":"4","C:\\Users\\srava\\Downloads\\restaurent-details-main\\restaurent-details-main\\src\\containers\\Restaurant.js":"5","C:\\Users\\srava\\Downloads\\restaurent-details-main\\restaurent-details-main\\src\\sagas\\restaurantSaga.js":"6","C:\\Users\\srava\\Downloads\\restaurent-details-main\\restaurent-details-main\\src\\reducers\\index.js":"7","C:\\Users\\srava\\Downloads\\restaurent-details-main\\restaurent-details-main\\src\\api\\getRestaurants.js":"8","C:\\Users\\srava\\Downloads\\restaurent-details-main\\restaurent-details-main\\src\\constants\\restaurrantsConstant.js":"9","C:\\Users\\srava\\Downloads\\restaurent-details-main\\restaurent-details-main\\src\\components\\Loader\\Loader.js":"10","C:\\Users\\srava\\Downloads\\restaurent-details-main\\restaurent-details-main\\src\\components\\table\\RestaurantTable.jsx":"11","C:\\Users\\srava\\Downloads\\restaurent-details-main\\restaurent-details-main\\src\\actions\\restaurants\\index.js":"12","C:\\Users\\srava\\Downloads\\restaurent-details-main\\restaurent-details-main\\src\\reducers\\restaurants.js":"13","C:\\Users\\srava\\Downloads\\restaurent-details-main\\restaurent-details-main\\src\\constants\\urlConstants.js":"14","C:\\Users\\srava\\Downloads\\restaurent-details-main\\restaurent-details-main\\src\\constants\\state.js":"15","C:\\Users\\srava\\Downloads\\restaurent-details-main\\restaurent-details-main\\src\\actions\\restaurants\\actionType.js":"16","C:\\Users\\srava\\Downloads\\restaurent-details-main\\restaurent-details-main\\src\\actions\\restaurants\\actions.js":"17"},{"size":567,"mtime":1607290906989,"results":"18","hashOfConfig":"19"},{"size":211,"mtime":1607290906295,"results":"20","hashOfConfig":"19"},{"size":365,"mtime":1607290909110,"results":"21","hashOfConfig":"19"},{"size":362,"mtime":1607290907206,"results":"22","hashOfConfig":"19"},{"size":1105,"mtime":1607314063749,"results":"23","hashOfConfig":"19"},{"size":710,"mtime":1607356163582,"results":"24","hashOfConfig":"19"},{"size":162,"mtime":1607290916486,"results":"25","hashOfConfig":"19"},{"size":175,"mtime":1607290909880,"results":"26","hashOfConfig":"19"},{"size":1608,"mtime":1607315785842,"results":"27","hashOfConfig":"19"},{"size":203,"mtime":1607290914496,"results":"28","hashOfConfig":"19"},{"size":7733,"mtime":1607291402527,"results":"29","hashOfConfig":"19"},{"size":56,"mtime":1607290909656,"results":"30","hashOfConfig":"19"},{"size":482,"mtime":1607313988711,"results":"31","hashOfConfig":"19"},{"size":58,"mtime":1607290915580,"results":"32","hashOfConfig":"19"},{"size":1429,"mtime":1607290915458,"results":"33","hashOfConfig":"19"},{"size":133,"mtime":1607313911790,"results":"34","hashOfConfig":"19"},{"size":274,"mtime":1607313940381,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"11yg40b",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\srava\\Downloads\\restaurent-details-main\\restaurent-details-main\\src\\index.js",[],["73","74"],"C:\\Users\\srava\\Downloads\\restaurent-details-main\\restaurent-details-main\\src\\App.js",[],"C:\\Users\\srava\\Downloads\\restaurent-details-main\\restaurent-details-main\\src\\store.js",[],"C:\\Users\\srava\\Downloads\\restaurent-details-main\\restaurent-details-main\\src\\reportWebVitals.js",[],"C:\\Users\\srava\\Downloads\\restaurent-details-main\\restaurent-details-main\\src\\containers\\Restaurant.js",["75"],"C:\\Users\\srava\\Downloads\\restaurent-details-main\\restaurent-details-main\\src\\sagas\\restaurantSaga.js",[],"C:\\Users\\srava\\Downloads\\restaurent-details-main\\restaurent-details-main\\src\\reducers\\index.js",[],"C:\\Users\\srava\\Downloads\\restaurent-details-main\\restaurent-details-main\\src\\api\\getRestaurants.js",[],"C:\\Users\\srava\\Downloads\\restaurent-details-main\\restaurent-details-main\\src\\constants\\restaurrantsConstant.js",["76"],"C:\\Users\\srava\\Downloads\\restaurent-details-main\\restaurent-details-main\\src\\components\\Loader\\Loader.js",["77"],"import React, {useEffect} from 'react';\nimport './Loader.css'\n\nfunction Loader(props) {  \n    return (\n      <div className=\"Loader\">\n        Loading ...\n      </div>\n    );\n}  \nexport default Loader;\n  ","C:\\Users\\srava\\Downloads\\restaurent-details-main\\restaurent-details-main\\src\\components\\table\\RestaurantTable.jsx",["78","79","80","81","82"],"import React, {useState, useEffect} from 'react';\nimport './RestaurantTable.css'\nimport { SORT_TYPE, FILTER_TYPES, filterByFilterType } from '../../constants/restaurrantsConstant';\nimport Loader from '../Loader/Loader';\n\nfunction RestaurantTable(props) {\n    const {columns, data, perPageRecord, defaultSort, isLoading} = props;\n    \n    const [pageNumber, setPageNumber] = useState(0);\n    const [filterData, setFilterData] = useState(data);\n    const [searchText, setSearchText] = useState('');\n    const [filters, setFilter] = useState([]);\n    const [isFilterEnabled, setFilterEnabled] = useState(true);\n    const [records, setSelectedRecords] = useState([]);\n    const [sortBy, setSortBy] = useState(defaultSort);\n\n    useEffect(() => {\n        setSelectedRecords([...filterData].splice((pageNumber-1)*perPageRecord, perPageRecord ))\n    }, [pageNumber]);\n    useEffect(() => {\n        const filterData = getFilteredRecords(filters, searchText);\n        setPageNumber(1) \n        let records = filterData.sort((a,b) =>  a[sortBy.field].localeCompare(b[sortBy.field])); \n        if(sortBy.order === SORT_TYPE.DESC) {\n            records= records.reverse()\n        } \n        setFilterData(records);\n        setSelectedRecords([...records].splice((pageNumber-1)*perPageRecord, perPageRecord))     \n    }, [filters, searchText, sortBy, isFilterEnabled]);\n    useEffect(() => {\n        if(!isLoading) {\n            const filterData = data.sort((a,b) =>  a[sortBy.field].localeCompare(b[sortBy.field]));\n            setPageNumber(1);\n            setFilterData(filterData);   \n            setSelectedRecords([...filterData].slice(0, perPageRecord));   \n        }    \n    }, [isLoading])\n    const  onSortChange = (column) =>{\n        if(column.field === sortBy.field) {\n            sortBy.order= sortBy.order === SORT_TYPE.ASC ? SORT_TYPE.DESC : SORT_TYPE.ASC;\n        } else {\n            sortBy.field = column.field;\n            sortBy.orer = SORT_TYPE.ASC;\n        }\n        setSortBy({...sortBy});\n    }\n    const getFilteredRecords =() => {\n        const filteredData = isFilterEnabled ?  data.filter(record => {\n            return filters.every(filter => {\n                \n                return filter.value ? filterByFilterType(record, filter): true;\n            })\n        }): data;\n\n        return searchText ? filteredData.filter(record => {\n            const searchableColumns = columns.filter(column => column.searchable);\n            return searchableColumns.some(column => {\n                const newRecord = {...record};\n                if(column.filter === FILTER_TYPES.SELECT && column.getDisplayValue) {\n                    newRecord[column.field] = `${newRecord[column.field]}${column.getDisplayValue(newRecord[column.field])}` \n                }\n                return filterByFilterType(newRecord, {filterType: column.filter, name: column.field, value: searchText});\n            })\n        }): filteredData;\n    }\n    const  onFilterChange = (event, column) =>{\n        const value = event.target.value;\n        const filter =  filters.find(filter => filter.name === column.field);\n        if(filter) {\n            filter.value = value;   \n        } else {\n            filters.push({name: column.field, value, filterType: column.filter })\n        }\n        setFilter([...filters])\n    }\n  return (\n    <div className=\"table-container\">\n    <div className=\"search_box\">\n        <div className=\"search_container\">\n        <input type=\"text\" placeholder=\"Search\" className=\"search\" onChange={e => setSearchText(e.target.value)}/>\n        <input type=\"checkbox\" placeholder=\"Search\" id=\"disableFilter\" className=\"disable_filter\" onChange={e => \n            {\n                setFilterEnabled(!e.target.checked)}\n            }/>\n        <label for=\"disableFilter\"> Disable Filter</label>\n        </div>\n    </div>\n    <div className=\"table_section\">\n    {isLoading && <Loader/>}\n        <table className=\"zebra\">\n            <thead>\n                <tr>\n                    {columns.map(column => {\n                       return  <th key={column.field}>\n                       {column.name}\n                        {column.sort !== SORT_TYPE.NONE && <img onClick ={() => {onSortChange(column)}}className=\"sort_icon\" src=\"sort-arrows.svg\"/>}\n                         </th>\n                    })}\n                </tr>\n                <tr className=\"filter\">\n                    {columns.map(column => {\n                        if(column.filter === FILTER_TYPES.TEXT) {\n                            return  <td><input type=\"text\" placeholder=\"\" disabled={!isFilterEnabled}  onChange={e => onFilterChange(e, column)} /></td>\n                        } else if(column.filter === FILTER_TYPES.SELECT) {\n                            const options =  [...new Set(data.map(restaurant => {\n                                return restaurant[column.field]\n                           }))]; \n                            return <td><select disabled={!isFilterEnabled} onChange={e => onFilterChange(e, column)}>\n                                <option value=''>All</option>\n                                {options.map( option => {\n                                    return <option value={option}>{column.getDisplayValue ? column.getDisplayValue(option): option}</option>\n                                })}\n                            </select></td>\n                        }else if(column.filter === FILTER_TYPES.SELECT_ARRAY) {\n                            const options =  [...new Set(data.reduce((list,restaurant) => {\n                                 list = [...list,...restaurant[column.field]]\n                                 return list;\n                           }, []))]; \n                            return <td><select disabled={!isFilterEnabled} onChange={e => onFilterChange(e, column)}>\n                                <option value=''>All</option>\n                                {options.map( option => {\n                                    return <option value={option}>{option}</option>\n                                })}\n                            </select></td>\n                        } \n                        else {\n                            return  <td><input type=\"text\" placeholder=\"\" disabled/></td>\n                        }\n                    })}\n                   \n                </tr>\n            </thead>\n            <tbody>\n                \n                    {!!records.length && records.map(row => {\n                        return (<tr key={row.id}>\n                            {columns.map(column => {\n                                return  <td>{column.getDisplayValue ? column.getDisplayValue(row[column.field]) : row[column.field]}</td>\n                            })}\n                        </tr>)\n                    })}\n                    {!records.length && !isLoading &&  <tr><td colSpan=\"5\" className=\"empty-result\">\n                        <b>No Result Found</b>\n                    </td>\n                </tr>}\n                    \n            </tbody>\n        </table>\n    </div>\n    <div className=\"table_pagination\">\n        <div className=\"pagination_drop_down\">\n            Total: <b>{filterData.length}</b>\n        </div>\n        <div className=\"pagination_list\">\n            <ul className=\"pagination\">\n                {\n                    new Array(Math.ceil(filterData.length/perPageRecord)).fill(0).map((val, index) => {\n                        return (<li onClick={() =>setPageNumber(index+1)}className={index+1 === pageNumber ? \"active\": ''}>\n                            <a href=\"#\">{index+1}</a>\n                        </li>);\n                    })\n                }\n            </ul>\n        </div>\n    </div>\n</div>\n  );\n}\nexport default RestaurantTable;","C:\\Users\\srava\\Downloads\\restaurent-details-main\\restaurent-details-main\\src\\actions\\restaurants\\index.js",[],"C:\\Users\\srava\\Downloads\\restaurent-details-main\\restaurent-details-main\\src\\reducers\\restaurants.js",["83","84"],"C:\\Users\\srava\\Downloads\\restaurent-details-main\\restaurent-details-main\\src\\constants\\urlConstants.js",[],"C:\\Users\\srava\\Downloads\\restaurent-details-main\\restaurent-details-main\\src\\constants\\state.js",[],"C:\\Users\\srava\\Downloads\\restaurent-details-main\\restaurent-details-main\\src\\actions\\restaurants\\actionType.js",[],"C:\\Users\\srava\\Downloads\\restaurent-details-main\\restaurent-details-main\\src\\actions\\restaurants\\actions.js",[],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":11,"column":8,"nodeType":"91","endLine":11,"endColumn":10,"suggestions":"92"},{"ruleId":"93","severity":1,"message":"94","line":26,"column":109,"nodeType":"95","messageId":"96","endLine":26,"endColumn":113},{"ruleId":"97","severity":1,"message":"98","line":1,"column":16,"nodeType":"99","messageId":"100","endLine":1,"endColumn":25},{"ruleId":"89","severity":1,"message":"101","line":19,"column":8,"nodeType":"91","endLine":19,"endColumn":20,"suggestions":"102"},{"ruleId":"89","severity":1,"message":"103","line":29,"column":8,"nodeType":"91","endLine":29,"endColumn":54,"suggestions":"104"},{"ruleId":"89","severity":1,"message":"105","line":37,"column":8,"nodeType":"91","endLine":37,"endColumn":19,"suggestions":"106"},{"ruleId":"107","severity":1,"message":"108","line":96,"column":60,"nodeType":"109","endLine":96,"endColumn":149},{"ruleId":"110","severity":1,"message":"111","line":159,"column":29,"nodeType":"109","endLine":159,"endColumn":41},{"ruleId":"97","severity":1,"message":"112","line":2,"column":10,"nodeType":"99","messageId":"100","endLine":2,"endColumn":20},{"ruleId":"97","severity":1,"message":"113","line":2,"column":22,"nodeType":"99","messageId":"100","endLine":2,"endColumn":31},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["116"],"no-dupe-keys","Duplicate key 'sort'.","ObjectExpression","unexpected","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'filterData' and 'perPageRecord'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setSelectedRecords' needs the current value of 'filterData'.",["117"],"React Hook useEffect has missing dependencies: 'getFilteredRecords', 'pageNumber', and 'perPageRecord'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setSelectedRecords' needs the current value of 'pageNumber'.",["118"],"React Hook useEffect has missing dependencies: 'data', 'perPageRecord', and 'sortBy.field'. Either include them or remove the dependency array.",["119"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'FIELD_NAME' is defined but never used.","'SORT_TYPE' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"120","fix":"121"},{"desc":"122","fix":"123"},{"desc":"124","fix":"125"},{"desc":"126","fix":"127"},"Update the dependencies array to be: [props]",{"range":"128","text":"129"},"Update the dependencies array to be: [filterData, pageNumber, perPageRecord]",{"range":"130","text":"131"},"Update the dependencies array to be: [filters, searchText, sortBy, isFilterEnabled, getFilteredRecords, pageNumber, perPageRecord]",{"range":"132","text":"133"},"Update the dependencies array to be: [data, isLoading, perPageRecord, sortBy.field]",{"range":"134","text":"135"},[484,486],"[props]",[846,858],"[filterData, pageNumber, perPageRecord]",[1308,1354],"[filters, searchText, sortBy, isFilterEnabled, getFilteredRecords, pageNumber, perPageRecord]",[1673,1684],"[data, isLoading, perPageRecord, sortBy.field]"]