{"version":3,"sources":["actions/restaurants/actionType.js","constants/state.js","constants/restaurrantsConstant.js","components/Loader/Loader.js","components/table/RestaurantTable.jsx","containers/Restaurant.js","actions/restaurants/actions.js","App.js","reportWebVitals.js","reducers/restaurants.js","reducers/index.js","constants/urlConstants.js","api/getRestaurants.js","sagas/restaurantSaga.js","store.js","index.js"],"names":["FETCH_RESTAURANTS","UPDATE_RESTAURANTS","STATES","FILTER_TYPES","SORT_TYPE","FIELD_NAME","TABLE_COLUMNS","field","name","searchable","filter","sort","getDisplayValue","code","genres","join","filterByFilterType","record","filterType","find","toLowerCase","includes","value","Loader","props","className","RestaurantTable","columns","data","perPageRecord","defaultSort","isLoading","useState","pageNumber","setPageNumber","filterData","setFilterData","searchText","setSearchText","filters","setFilter","isFilterEnabled","setFilterEnabled","records","setSelectedRecords","sortBy","setSortBy","useEffect","splice","getFilteredRecords","a","b","localeCompare","order","reverse","slice","filteredData","every","column","some","newRecord","onFilterChange","event","target","push","type","placeholder","onChange","e","id","checked","for","map","onClick","orer","onSortChange","src","disabled","options","Set","restaurant","option","reduce","list","length","row","colSpan","Array","Math","ceil","fill","val","index","href","connect","store","restaurants","dispatch","fetchRestaurants","DEFAULT_SORTBY","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initState","restaurantReducer","state","action","console","log","combineReducers","restaurantsReducer","URLS","getRestaurants","fetch","headers","response","json","restaurantSaga","call","put","split","all","takeEvery","sagaMiddleware","createSagaMiddleware","createStore","rootReducer","applyMiddleware","run","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aa40d701.chunk.js","sourcesContent":["export const FETCH_RESTAURANTS = 'RESTAURANTS/FETCH_RESTAURANTS';\nexport const UPDATE_RESTAURANTS = 'RESTAURANTS/UPDATE_RESTAURANTS';"," const STATES = {\n    \"AL\": \"Alabama\",\n    \"AK\": \"Alaska\",\n    \"AS\": \"American Samoa\",\n    \"AZ\": \"Arizona\",\n    \"AR\": \"Arkansas\",\n    \"CA\": \"California\",\n    \"CO\": \"Colorado\",\n    \"CT\": \"Connecticut\",\n    \"DE\": \"Delaware\",\n    \"DC\": \"District Of Columbia\",\n    \"FM\": \"Federated States Of Micronesia\",\n    \"FL\": \"Florida\",\n    \"GA\": \"Georgia\",\n    \"GU\": \"Guam\",\n    \"HI\": \"Hawaii\",\n    \"ID\": \"Idaho\",\n    \"IL\": \"Illinois\",\n    \"IN\": \"Indiana\",\n    \"IA\": \"Iowa\",\n    \"KS\": \"Kansas\",\n    \"KY\": \"Kentucky\",\n    \"LA\": \"Louisiana\",\n    \"ME\": \"Maine\",\n    \"MH\": \"Marshall Islands\",\n    \"MD\": \"Maryland\",\n    \"MA\": \"Massachusetts\",\n    \"MI\": \"Michigan\",\n    \"MN\": \"Minnesota\",\n    \"MS\": \"Mississippi\",\n    \"MO\": \"Missouri\",\n    \"MT\": \"Montana\",\n    \"NE\": \"Nebraska\",\n    \"NV\": \"Nevada\",\n    \"NH\": \"New Hampshire\",\n    \"NJ\": \"New Jersey\",\n    \"NM\": \"New Mexico\",\n    \"NY\": \"New York\",\n    \"NC\": \"North Carolina\",\n    \"ND\": \"North Dakota\",\n    \"MP\": \"Northern Mariana Islands\",\n    \"OH\": \"Ohio\",\n    \"OK\": \"Oklahoma\",\n    \"OR\": \"Oregon\",\n    \"PW\": \"Palau\",\n    \"PA\": \"Pennsylvania\",\n    \"PR\": \"Puerto Rico\",\n    \"RI\": \"Rhode Island\",\n    \"SC\": \"South Carolina\",\n    \"SD\": \"South Dakota\",\n    \"TN\": \"Tennessee\",\n    \"TX\": \"Texas\",\n    \"UT\": \"Utah\",\n    \"VT\": \"Vermont\",\n    \"VI\": \"Virgin Islands\",\n    \"VA\": \"Virginia\",\n    \"WA\": \"Washington\",\n    \"WV\": \"West Virginia\",\n    \"WI\": \"Wisconsin\",\n    \"WY\": \"Wyoming\"\n};\n\nexport default STATES;","import STATES from \"./state\";\n\nexport const FILTER_TYPES = {\n    SELECT: \"SELECT\",\n    SELECT_ARRAY: \"SELECT_ARRAY\",\n    TEXT: \"TEXT\",\n    NONE: \"NONE\"\n}\n\nexport const SORT_TYPE = {\n    ASC: \"ASC\",\n    DESC: \"DESC\",\n    NONE: \"NONE\"\n}\n\nexport const FIELD_NAME = {\n    NAME: \"name\",\n    CITY: \"city\",\n    STATE: \"state\",\n    PHONE_NUMBER: \"telephone\",\n    GENRE: \"genre\"\n};\n\nexport const TABLE_COLUMNS = [\n    {field: FIELD_NAME.NAME, name: \"Restaurant Name\", searchable:true, filter: FILTER_TYPES.NONE, sort: SORT_TYPE.ASC},\n    {field: FIELD_NAME.CITY,name: \"City\", searchable:true,filter: FILTER_TYPES.TEXT, sort: SORT_TYPE.ASC},\n    {field: FIELD_NAME.STATE, name:\"State\", searchable:true, filter: FILTER_TYPES.SELECT, sort: SORT_TYPE.ASC, getDisplayValue: (code) => {\n        return STATES[code]\n    }},\n    {field: FIELD_NAME.PHONE_NUMBER, name: \"Phone Number\", searchable:true, filter: FILTER_TYPES.NONE, sort: SORT_TYPE.NONE},\n    {field: FIELD_NAME.GENRE, name: \"Genre\" ,searchable:true, filter: FILTER_TYPES.SELECT_ARRAY, sort: SORT_TYPE.NONE, getDisplayValue: (genres) => {\n        return genres.join(\", \")\n    }},\n]\n\nexport function filterByFilterType(record, filter) {\n    if(filter.filterType === FILTER_TYPES.SELECT_ARRAY) {\n        return !!record[filter.name].find(field => field.toLowerCase().includes(filter.value.toLowerCase()));\n    } else if(filter.filterType === FILTER_TYPES.SELECT) {\n        return record[filter.name].toLowerCase().includes(filter.value.toLowerCase());\n    }\n    return record[filter.name].toLowerCase().includes(filter.value.toLowerCase());\n}","import React from 'react';\nimport './Loader.css'\n\nfunction Loader(props) {  \n    return (\n      <div className=\"Loader\">\n        Loading ...\n      </div>\n    );\n}  \nexport default Loader;\n  ","import React, {useState, useEffect} from 'react';\nimport './RestaurantTable.css'\nimport { SORT_TYPE, FILTER_TYPES, filterByFilterType } from '../../constants/restaurrantsConstant';\nimport Loader from '../Loader/Loader';\n\nfunction RestaurantTable(props) {\n    const {columns, data, perPageRecord, defaultSort, isLoading} = props;\n    \n    const [pageNumber, setPageNumber] = useState(0);\n    const [filterData, setFilterData] = useState(data);\n    const [searchText, setSearchText] = useState('');\n    const [filters, setFilter] = useState([]);\n    const [isFilterEnabled, setFilterEnabled] = useState(true);\n    const [records, setSelectedRecords] = useState([]);\n    const [sortBy, setSortBy] = useState(defaultSort);\n\n    useEffect(() => {\n        setSelectedRecords([...filterData].splice((pageNumber-1)*perPageRecord, perPageRecord ))\n    }, [pageNumber]);\n    useEffect(() => {\n        const filterData = getFilteredRecords(filters, searchText);\n        setPageNumber(1) \n        let records = filterData.sort((a,b) =>  a[sortBy.field].localeCompare(b[sortBy.field])); \n        if(sortBy.order === SORT_TYPE.DESC) {\n            records= records.reverse()\n        } \n        setFilterData(records);\n        setSelectedRecords([...records].splice((pageNumber-1)*perPageRecord, perPageRecord))     \n    }, [filters, searchText, sortBy, isFilterEnabled]);\n    useEffect(() => {\n        if(!isLoading) {\n            const filterData = data.sort((a,b) =>  a[sortBy.field].localeCompare(b[sortBy.field]));\n            setPageNumber(1);\n            setFilterData(filterData);   \n            setSelectedRecords([...filterData].slice(0, perPageRecord));   \n        }    \n    }, [isLoading])\n    const  onSortChange = (column) =>{\n        if(column.field === sortBy.field) {\n            sortBy.order= sortBy.order === SORT_TYPE.ASC ? SORT_TYPE.DESC : SORT_TYPE.ASC;\n        } else {\n            sortBy.field = column.field;\n            sortBy.orer = SORT_TYPE.ASC;\n        }\n        setSortBy({...sortBy});\n    }\n    const getFilteredRecords =() => {\n        const filteredData = isFilterEnabled ?  data.filter(record => {\n            return filters.every(filter => {\n                \n                return filter.value ? filterByFilterType(record, filter): true;\n            })\n        }): data;\n\n        return searchText ? filteredData.filter(record => {\n            const searchableColumns = columns.filter(column => column.searchable);\n            return searchableColumns.some(column => {\n                const newRecord = {...record};\n                if(column.filter === FILTER_TYPES.SELECT && column.getDisplayValue) {\n                    newRecord[column.field] = `${newRecord[column.field]}${column.getDisplayValue(newRecord[column.field])}` \n                }\n                return filterByFilterType(newRecord, {filterType: column.filter, name: column.field, value: searchText});\n            })\n        }): filteredData;\n    }\n    const  onFilterChange = (event, column) =>{\n        const value = event.target.value;\n        const filter =  filters.find(filter => filter.name === column.field);\n        if(filter) {\n            filter.value = value;   \n        } else {\n            filters.push({name: column.field, value, filterType: column.filter })\n        }\n        setFilter([...filters])\n    }\n  return (\n    <div className=\"table-container\">\n    <div className=\"search_box\">\n        <div className=\"search_container\">\n        <input type=\"text\" placeholder=\"Search\" className=\"search\" onChange={e => setSearchText(e.target.value)}/>\n        <input type=\"checkbox\" placeholder=\"Search\" id=\"disableFilter\" className=\"disable_filter\" onChange={e => \n            {\n                setFilterEnabled(!e.target.checked)}\n            }/>\n        <label for=\"disableFilter\"> Disable Filter</label>\n        </div>\n    </div>\n    <div className=\"table_section\">\n    {isLoading && <Loader/>}\n        <table className=\"zebra\">\n            <thead>\n                <tr>\n                    {columns.map(column => {\n                       return  <th key={column.field}>\n                       {column.name}\n                        {column.sort !== SORT_TYPE.NONE && <img onClick ={() => {onSortChange(column)}}className=\"sort_icon\" src=\"sort-arrows.svg\"/>}\n                         </th>\n                    })}\n                </tr>\n                <tr className=\"filter\">\n                    {columns.map(column => {\n                        if(column.filter === FILTER_TYPES.TEXT) {\n                            return  <td><input type=\"text\" placeholder=\"\" disabled={!isFilterEnabled}  onChange={e => onFilterChange(e, column)} /></td>\n                        } else if(column.filter === FILTER_TYPES.SELECT) {\n                            const options =  [...new Set(data.map(restaurant => {\n                                return restaurant[column.field]\n                           }))]; \n                            return <td><select disabled={!isFilterEnabled} onChange={e => onFilterChange(e, column)}>\n                                <option value=''>All</option>\n                                {options.map( option => {\n                                    return <option value={option}>{column.getDisplayValue ? column.getDisplayValue(option): option}</option>\n                                })}\n                            </select></td>\n                        }else if(column.filter === FILTER_TYPES.SELECT_ARRAY) {\n                            const options =  [...new Set(data.reduce((list,restaurant) => {\n                                 list = [...list,...restaurant[column.field]]\n                                 return list;\n                           }, []))]; \n                            return <td><select disabled={!isFilterEnabled} onChange={e => onFilterChange(e, column)}>\n                                <option value=''>All</option>\n                                {options.map( option => {\n                                    return <option value={option}>{option}</option>\n                                })}\n                            </select></td>\n                        } \n                        else {\n                            return  <td><input type=\"text\" placeholder=\"\" disabled/></td>\n                        }\n                    })}\n                   \n                </tr>\n            </thead>\n            <tbody>\n                \n                    {!!records.length && records.map(row => {\n                        return (<tr key={row.id}>\n                            {columns.map(column => {\n                                return  <td>{column.getDisplayValue ? column.getDisplayValue(row[column.field]) : row[column.field]}</td>\n                            })}\n                        </tr>)\n                    })}\n                    {!records.length && !isLoading &&  <tr><td colSpan=\"5\" className=\"empty-result\">\n                        <b>No Result Found</b>\n                    </td>\n                </tr>}\n                    \n            </tbody>\n        </table>\n    </div>\n    <div className=\"table_pagination\">\n        <div className=\"pagination_drop_down\">\n            Total: <b>{filterData.length}</b>\n        </div>\n        <div className=\"pagination_list\">\n            <ul className=\"pagination\">\n                {\n                    new Array(Math.ceil(filterData.length/perPageRecord)).fill(0).map((val, index) => {\n                        return (<li onClick={() =>setPageNumber(index+1)}className={index+1 === pageNumber ? \"active\": ''}>\n                            <a href=\"#\">{index+1}</a>\n                        </li>);\n                    })\n                }\n            </ul>\n        </div>\n    </div>\n</div>\n  );\n}\nexport default RestaurantTable;","import React, {useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport {fetchRestaurants} from '../actions/restaurants';\nimport RestaurantTable from '../components/table/RestaurantTable';\nimport './Restaurant.css';\nimport { TABLE_COLUMNS, FIELD_NAME, SORT_TYPE } from '../constants/restaurrantsConstant';\nfunction Restaurant(props) {\n    const DEFAULT_SORTBY =  {field: FIELD_NAME.NAME, order: SORT_TYPE.ASC};\n    useEffect(() => {\n      props.fetchRestaurants();\n    }, [])\n   const {isLoading, restaurants} = props;\n    return (\n      <div className=\"Restaurant\">\n\n     <RestaurantTable data={restaurants} isLoading={isLoading} columns={TABLE_COLUMNS} perPageRecord = {10} defaultSort ={DEFAULT_SORTBY}/>\n      </div>\n    );\n  }\n\nconst mapStateToProps = (store) => {\n    return  {\n      restaurants: store.restaurants.list,\n      isLoading: store.restaurants.isLoading\n    };\n  }\n  \n  const mapDispatchToProps = (dispatch) => {\n    return {\n      fetchRestaurants: () => dispatch(fetchRestaurants())\n    }\n  }\n  \n  export default connect(mapStateToProps, mapDispatchToProps)(Restaurant);\n  ","import { FETCH_RESTAURANTS, UPDATE_RESTAURANTS } from \"./actionType\";\n\nexport const fetchRestaurants =() =>{\n    return {\n        type: FETCH_RESTAURANTS\n    }\n}\n\n\nexport const updateRestaurants =(data) =>{\n    return {\n        type: UPDATE_RESTAURANTS,\n        data\n    }\n}","import React from 'react';\nimport './App.css';\nimport Restaurant from './containers/Restaurant';\n\nfunction App() {\n\n\n  return (\n    <div className=\"App\">\n      <Restaurant/>\n    </div>\n  );\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { UPDATE_RESTAURANTS } from \"../actions/restaurants\";\n\nconst initState = {\n    isLoading: true,\n    list: []\n};\n\nconst restaurantReducer = (state=initState, action) => {\n    console.log(action)\n    switch (action.type) {\n        case UPDATE_RESTAURANTS: \n        return {...state, list: action.data, isLoading: false} \n        default:\n        return state;\n    }\n}\n\nexport default restaurantReducer;\n","import { combineReducers } from \"redux\";\nimport restaurantsReducer from \"./restaurants\";\n\n\nexport default combineReducers({\n    restaurants: restaurantsReducer\n})","export const URLS = {\n    RESTAURENTS: 'https://code-challenge.spectrumtoolbox.com/api/restaurants'\n}","import { URLS } from \"../constants/urlConstants\";\n\nexport const getRestaurants = async() =>{\n    const response = await fetch(URLS.RESTAURENTS, {headers: {'Authorization': \"Api-Key q3MNxtfep8Gt\"}});\n    return response.json();\n};","import { FETCH_RESTAURANTS, updateRestaurants } from \"../actions/restaurants\";\nimport { takeEvery, all, call, put } from 'redux-saga/effects';\nimport { getRestaurants } from \"../api/getRestaurants\";\nimport { FIELD_NAME } from \"../constants/restaurrantsConstant\";\n\nexport const restaurantsList = (state) => state.restaurants.list\nfunction* fetchRestaurants(action) {   \n    let restaurants = yield call(getRestaurants);\n    yield put(updateRestaurants(restaurants.map(restaurant => ({...restaurant, [FIELD_NAME.GENRE]: restaurant[FIELD_NAME.GENRE].split(\",\")}))))\n}\n\n\nfunction* restaurantSaga() {\n    yield all([\n      takeEvery(FETCH_RESTAURANTS, fetchRestaurants),\n    ]);\n  }\n  export default restaurantSaga;\n","import { createStore, applyMiddleware } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport rootReducer from './reducers'\nimport restaurantSaga from './sagas/restaurantSaga';\n\nconst sagaMiddleware = createSagaMiddleware()\nconst store = createStore(rootReducer, applyMiddleware(sagaMiddleware))\nsagaMiddleware.run(restaurantSaga);\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}